{"ast":null,"code":"var _jsxFileName = \"/home/jesus/Lista-app/src/App.js\",\n  _s = $RefreshSig$();\n/*\nimport React, { useState } from \"react\";\nimport { FiTrash2 } from \"react-icons/fi\";\nimport \"./App.css\";\n\nfunction App() {\n  const [tareas, setTareas] = useState([]);\n  const [inputTarea, setInputTarea] = useState(\"\");\n\n  const guardarTareas = () => {\n    const tareasArray = tareas.map((tarea) => tarea.texto);\n    localStorage.setItem(\"tareas\", JSON.stringify(tareasArray));\n  };\n\n  const cargarTareas = () => {\n    const tareasArray = JSON.parse(localStorage.getItem(\"tareas\")) || [];\n    const tareasObjeto = tareasArray.map((tarea, index) => ({\n      id: index,\n      texto: tarea,\n    }));\n    setTareas(tareasObjeto);\n  };\n\n  const agregarTarea = () => {\n    if (inputTarea) {\n      const nuevaTarea = { id: tareas.length, texto: inputTarea };\n      setTareas([...tareas, nuevaTarea]);\n      setInputTarea(\"\");\n      guardarTareas();\n    } else {\n      alert(\"Por favor ingresa una tarea\");\n    }\n  };\n\n  const eliminarTarea = (id) => {\n    try {\n      const indice = tareas.findIndex((tarea) => tarea.id === id);\n      const tareasActualizadas = [...tareas];\n      tareasActualizadas.splice(indice, 1);\n      setTareas(tareasActualizadas);\n      guardarTareas();\n    } catch (error) {\n      alert(\"Por favor selecciona una tarea\");\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <ul>\n          {tareas.map((tarea, index) => (\n            <li key={tarea.id}>\n              <button onClick={() => eliminarTarea(tarea.id)}>\n                <FiTrash2 size={20} />\n              </button>\n              {index + 1}. {tarea.texto}\n            </li>\n          ))}\n        </ul>\n        <input\n          type=\"text\"\n          value={inputTarea}\n          onChange={(e) => setInputTarea(e.target.value)}\n        />\n        <button onClick={agregarTarea} className=\"large-button\">\n          Agregar tarea\n        </button>\n        <button onClick={cargarTareas} className=\"large-button\">\n          Cargar tareas\n        </button>\n      </header>\n    </div>\n  );\n}\n\nexport default App;*/\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tareas, setTareas] = useState([]);\n  const [inputTarea, setInputTarea] = useState(\"\");\n  const guardarTareas = () => {\n    const tareasArray = tareas.map(tarea => tarea.texto);\n    localStorage.setItem(\"tareas\", JSON.stringify(tareasArray));\n  };\n  const cargarTareas = () => {\n    const tareasArray = JSON.parse(localStorage.getItem(\"tareas\")) || [];\n    const tareasObjeto = tareasArray.map((tarea, index) => ({\n      id: index,\n      texto: tarea\n    }));\n    setTareas(tareasObjeto);\n  };\n  const agregarTarea = () => {\n    if (inputTarea) {\n      const nuevaTarea = {\n        id: tareas.length,\n        texto: inputTarea\n      };\n      setTareas([...tareas, nuevaTarea]);\n      setInputTarea(\"\");\n      guardarTareas();\n    } else {\n      alert(\"Por favor ingresa una tarea\");\n    }\n  };\n  const eliminarTarea = id => {\n    try {\n      const indice = tareas.findIndex(tarea => tarea.id === id);\n      const tareasActualizadas = [...tareas];\n      tareasActualizadas.splice(indice, 1);\n      setTareas(tareasActualizadas);\n      guardarTareas();\n    } catch (error) {\n      alert(\"Por favor selecciona una tarea\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header right-align\",\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        children: tareas.map((tarea, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"task-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => eliminarTarea(tarea.id),\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              viewBox: \"0 0 24 24\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              strokeWidth: \"2\",\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              className: \"feather feather-trash\",\n              children: [/*#__PURE__*/_jsxDEV(\"polyline\", {\n                points: \"3 6 5 6 20 6 20 14 5 14 5 6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M16 10a4 4 0 0 1-8 0 4 4 0 0 1 8 0z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this), index + 1, \". \", tarea.texto]\n        }, tarea.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: inputTarea,\n          onChange: e => setInputTarea(e.target.value),\n          placeholder: \"A\\xF1ade una tarea...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: agregarTarea,\n          className: \"large-button\",\n          children: \"Agregar tarea\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: cargarTareas,\n        className: \"large-button\",\n        children: \"Cargar tareas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"MkdSJubw/o3iKlR/iIC1pFNGHbg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","tareas","setTareas","inputTarea","setInputTarea","guardarTareas","tareasArray","map","tarea","texto","localStorage","setItem","JSON","stringify","cargarTareas","parse","getItem","tareasObjeto","index","id","agregarTarea","nuevaTarea","length","alert","eliminarTarea","indice","findIndex","tareasActualizadas","splice","error","className","children","onClick","xmlns","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","points","fileName","_jsxFileName","lineNumber","columnNumber","d","type","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["/home/jesus/Lista-app/src/App.js"],"sourcesContent":["/*\nimport React, { useState } from \"react\";\nimport { FiTrash2 } from \"react-icons/fi\";\nimport \"./App.css\";\n\nfunction App() {\n  const [tareas, setTareas] = useState([]);\n  const [inputTarea, setInputTarea] = useState(\"\");\n\n  const guardarTareas = () => {\n    const tareasArray = tareas.map((tarea) => tarea.texto);\n    localStorage.setItem(\"tareas\", JSON.stringify(tareasArray));\n  };\n\n  const cargarTareas = () => {\n    const tareasArray = JSON.parse(localStorage.getItem(\"tareas\")) || [];\n    const tareasObjeto = tareasArray.map((tarea, index) => ({\n      id: index,\n      texto: tarea,\n    }));\n    setTareas(tareasObjeto);\n  };\n\n  const agregarTarea = () => {\n    if (inputTarea) {\n      const nuevaTarea = { id: tareas.length, texto: inputTarea };\n      setTareas([...tareas, nuevaTarea]);\n      setInputTarea(\"\");\n      guardarTareas();\n    } else {\n      alert(\"Por favor ingresa una tarea\");\n    }\n  };\n\n  const eliminarTarea = (id) => {\n    try {\n      const indice = tareas.findIndex((tarea) => tarea.id === id);\n      const tareasActualizadas = [...tareas];\n      tareasActualizadas.splice(indice, 1);\n      setTareas(tareasActualizadas);\n      guardarTareas();\n    } catch (error) {\n      alert(\"Por favor selecciona una tarea\");\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <ul>\n          {tareas.map((tarea, index) => (\n            <li key={tarea.id}>\n              <button onClick={() => eliminarTarea(tarea.id)}>\n                <FiTrash2 size={20} />\n              </button>\n              {index + 1}. {tarea.texto}\n            </li>\n          ))}\n        </ul>\n        <input\n          type=\"text\"\n          value={inputTarea}\n          onChange={(e) => setInputTarea(e.target.value)}\n        />\n        <button onClick={agregarTarea} className=\"large-button\">\n          Agregar tarea\n        </button>\n        <button onClick={cargarTareas} className=\"large-button\">\n          Cargar tareas\n        </button>\n      </header>\n    </div>\n  );\n}\n\nexport default App;*/\nimport React, { useState } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [tareas, setTareas] = useState([]);\n  const [inputTarea, setInputTarea] = useState(\"\");\n\n  const guardarTareas = () => {\n    const tareasArray = tareas.map((tarea) => tarea.texto);\n    localStorage.setItem(\"tareas\", JSON.stringify(tareasArray));\n  };\n\n  const cargarTareas = () => {\n    const tareasArray = JSON.parse(localStorage.getItem(\"tareas\")) || [];\n    const tareasObjeto = tareasArray.map((tarea, index) => ({\n      id: index,\n      texto: tarea,\n    }));\n    setTareas(tareasObjeto);\n  };\n\n  const agregarTarea = () => {\n    if (inputTarea) {\n      const nuevaTarea = { id: tareas.length, texto: inputTarea };\n      setTareas([...tareas, nuevaTarea]);\n      setInputTarea(\"\");\n      guardarTareas();\n    } else {\n      alert(\"Por favor ingresa una tarea\");\n    }\n  };\n\n  const eliminarTarea = (id) => {\n    try {\n      const indice = tareas.findIndex((tarea) => tarea.id === id);\n      const tareasActualizadas = [...tareas];\n      tareasActualizadas.splice(indice, 1);\n      setTareas(tareasActualizadas);\n      guardarTareas();\n    } catch (error) {\n      alert(\"Por favor selecciona una tarea\");\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header right-align\">\n        <ul>\n          {tareas.map((tarea, index) => (\n            <li key={tarea.id} className=\"task-item\">\n              <button onClick={() => eliminarTarea(tarea.id)}>\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth=\"2\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  className=\"feather feather-trash\"\n                >\n                  <polyline points=\"3 6 5 6 20 6 20 14 5 14 5 6\"></polyline>\n                  <path d=\"M16 10a4 4 0 0 1-8 0 4 4 0 0 1 8 0z\"></path>\n                </svg>\n              </button>\n              {index + 1}. {tarea.texto}\n            </li>\n          ))}\n        </ul>\n        <div className=\"input-container\">\n          <input\n            type=\"text\"\n            value={inputTarea}\n            onChange={(e) => setInputTarea(e.target.value)}\n            placeholder=\"Añade una tarea...\"\n          />\n          <button onClick={agregarTarea} className=\"large-button\">\n            Agregar tarea\n          </button>\n        </div>\n        <button onClick={cargarTareas} className=\"large-button\">\n          Cargar tareas\n        </button>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}